/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema_de_cine;

import conexion_BD.conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jr245
 */
public class Panel_funciones extends javax.swing.JPanel {
    DefaultTableModel modelo;

    /**
     * Creates new form Panel_compras
     */
    public Panel_funciones() {
        initComponents();
        
        modelo = (DefaultTableModel) funciones.getModel();
        modelo.setRowCount(0);
        mostrarFunciones();
    }
    
    private void mostrarFunciones() {
    conexion dbc = new conexion(); // creamos la conexion
    Connection con = dbc.conectar(); // abrimos la conexion
    
    Statement st = null;
    ResultSet rs = null;
    
    try {
        st = con.createStatement(); // preparamos la consulta
        // consulta con JOIN para mostrar nombres en vez de IDs
        String consulta = "SELECT f.funcion_id, p.titulo AS pelicula, s.nombre AS sala, " +
                         "f.fecha_hora, f.precio_base " +
                         "FROM funciones f " +
                         "LEFT JOIN peliculas p ON f.pelicula_id = p.pelicula_id " +
                         "LEFT JOIN salas s ON f.sala_id = s.sala_id";
        
        rs = st.executeQuery(consulta); // ejecutamos la consulta para obtener todas las funciones con detalles
        
        // vamos leyendo cada registro que nos devuelve la consulta
        while (rs.next()) {
            // tomamos todos los datos de la fila y los agregamos en el arreglo fila
            Object[] fila = {
                rs.getInt("funcion_id"),          // el ID de la funcion (auto_increment)
                rs.getString("pelicula"),         // el nombre de la pelicula en vez del ID
                rs.getString("sala"),             // el nombre de la sala en vez del ID
                rs.getTimestamp("fecha_hora"),    // la fecha y hora de la funcion (datetime)
                rs.getBigDecimal("precio_base")   // el precio base de la funcion (decimal)
            };
            // a√±adimos esa fila a la tabla 
            modelo.addRow(fila);
        }
        
    } catch (SQLException ex) {
        // si algo sale mal con la conexion muestra este mensaje en la consola
        System.out.println("Error al cargar funciones: " + ex.getMessage());
    } finally {
        // cerramos todo para liberar memoria y evitar problemas
        try {
            if (rs != null) rs.close();
            if (st != null) st.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            System.out.println("Error cerrando recursos: " + ex.getMessage());
        }
    }
}
   
    
    
    
  

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        funciones = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 0, 0));

        funciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Funcion", "ID Pelicula", "Sala", "Fecha- Hora", "Precio Base"
            }
        ));
        jScrollPane1.setViewportView(funciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(226, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable funciones;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
